{"id":"node_modules/rxjs-compat/operator/race.js","dependencies":[{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/race.js.map","includedInParent":true,"mtime":1558549199495},{"name":"/Users/haimagami/Desktop/personal-site/package.json","includedInParent":true,"mtime":1558549229172},{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/package.json","includedInParent":true,"mtime":1558549199495},{"name":"rxjs/operators","loc":{"line":3,"column":26},"parent":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/race.js","resolved":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs/_esm5/operators/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return operators_1.race.apply(void 0, observables)(this);\n}\nexports.race = race;\n","map":{"version":3,"file":"race.js","sources":["../src/compat/operator/race.ts"],"names":[],"mappings":";;AACA,4CAAqD;AAOrD,mCAAmC;AAEnC;;;;;;;GAOG;AACH,SAAgB,IAAI;IAAyB,qBAA2D;SAA3D,UAA2D,EAA3D,qBAA2D,EAA3D,IAA2D;QAA3D,gCAA2D;;IACtG,OAAO,gBAAW,eAAI,WAAW,EAAE,IAAI,CAAC,CAAC;AAC3C,CAAC;AAFD,oBAEC","sourcesContent":[null]}},"hash":"62f813cc1ecf8666a5f4b3fa71df7e60","cacheData":{"env":{}}}