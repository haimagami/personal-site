{"id":"node_modules/rxjs-compat/operator/toArray.js","dependencies":[{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/toArray.js.map","includedInParent":true,"mtime":1558549199495},{"name":"/Users/haimagami/Desktop/personal-site/package.json","includedInParent":true,"mtime":1558549229172},{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/package.json","includedInParent":true,"mtime":1558549199495},{"name":"rxjs/operators","loc":{"line":3,"column":26},"parent":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/toArray.js","resolved":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs/_esm5/operators/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return operators_1.toArray()(this);\n}\nexports.toArray = toArray;\n","map":{"version":3,"file":"toArray.js","sources":["../src/compat/operator/toArray.ts"],"names":[],"mappings":";;AAEA,4CAAwD;AAExD;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,SAAgB,OAAO;IACrB,OAAO,mBAAW,EAAE,CAAC,IAAI,CAAoB,CAAC;AAChD,CAAC;AAFD,0BAEC","sourcesContent":[null]}},"hash":"ba26edf0d284511cdf6c60872e59ab16","cacheData":{"env":{}}}