{"id":"node_modules/rxjs-compat/operator/bufferTime.js","dependencies":[{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/bufferTime.js.map","includedInParent":true,"mtime":1558549199495},{"name":"/Users/haimagami/Desktop/personal-site/package.json","includedInParent":true,"mtime":1558549229172},{"name":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/package.json","includedInParent":true,"mtime":1558549199495},{"name":"rxjs","loc":{"line":3,"column":21},"parent":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/bufferTime.js","resolved":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs/_esm5/index.js"},{"name":"rxjs/internal-compatibility","loc":{"line":4,"column":39},"parent":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/bufferTime.js","resolved":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs/_esm5/internal-compatibility/index.js"},{"name":"rxjs/operators","loc":{"line":5,"column":26},"parent":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs-compat/operator/bufferTime.js","resolved":"/Users/haimagami/Desktop/personal-site/node_modules/rxjs/_esm5/operators/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=asyncScheduler] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = rxjs_1.asyncScheduler;\n    if (internal_compatibility_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return operators_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nexports.bufferTime = bufferTime;\n","map":{"version":3,"file":"bufferTime.js","sources":["../src/compat/operator/bufferTime.ts"],"names":[],"mappings":";;AAAA,6BAAiE;AACjE,sEAA0D;AAC1D,4CAA2D;AAM3D,mCAAmC;AAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CG;AACH,SAAgB,UAAU,CAAyB,cAAsB;IACvE,IAAI,MAAM,GAAW,SAAS,CAAC,MAAM,CAAC;IAEtC,IAAI,SAAS,GAAkB,qBAAc,CAAC;IAC9C,IAAI,oCAAW,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;QAChD,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5C,MAAM,EAAE,CAAC;KACV;IAED,IAAI,sBAAsB,GAAW,IAAI,CAAC;IAC1C,IAAI,MAAM,IAAI,CAAC,EAAE;QACf,sBAAsB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KACvC;IAED,IAAI,aAAa,GAAW,MAAM,CAAC,iBAAiB,CAAC;IACrD,IAAI,MAAM,IAAI,CAAC,EAAE;QACf,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9B;IAED,OAAO,sBAAW,CAAC,cAAc,EAAE,sBAAsB,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,IAAI,CAAoB,CAAC;AAChH,CAAC;AApBD,gCAoBC","sourcesContent":[null]}},"hash":"d4de63e2720d8e7cc822af191102f104","cacheData":{"env":{}}}